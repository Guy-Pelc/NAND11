<class>
<keyword> class </keyword>
<identifier category='class' usage='definition'> Square </identifier>
<symbol> { </symbol>
<classVarDec>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier category='FIELD' usage='definition' index='0'> x </identifier>
<symbol> , </symbol>
<identifier category='FIELD' usage='definition' index='1'> y </identifier>
<symbol> ; </symbol>
</classVarDec>
<classVarDec>
<keyword> field </keyword>
<keyword> int </keyword>
<identifier category='FIELD' usage='definition' index='2'> size </identifier>
<symbol> ; </symbol>
</classVarDec>
<subroutineDec>
<keyword> constructor </keyword>
<identifier category='class' usage='call'> Square </identifier>
<identifier category='subroutine' usage='definition'> new </identifier>
<symbol> ( </symbol>
<parameterList>
<keyword> int </keyword>
<identifier category='ARG' usage='definition' index='0'> Ax </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier category='ARG' usage='definition' index='1'> Ay </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier category='ARG' usage='definition' index='2'> Asize </identifier>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='ARG' usage='call' index='0'> Ax </identifier>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='ARG' usage='call' index='1'> Ay </identifier>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='ARG' usage='call' index='2'> Asize </identifier>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='subroutine' usage='call'> draw </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<expression>
<term>
<keyword> this </keyword>
</term>
</expression>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> dispose </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Memory </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> deAlloc </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> this </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> draw </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> erase </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> incSize </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> &lt; </symbol>
<term>
<integerConstant> 254 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> &amp; </symbol>
<term>
<symbol> ( </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> &lt; </symbol>
<term>
<integerConstant> 510 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='subroutine' usage='call'> erase </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 2 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='subroutine' usage='call'> draw </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> decSize </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
<symbol> &gt; </symbol>
<term>
<integerConstant> 2 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='subroutine' usage='call'> erase </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 2 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='subroutine' usage='call'> draw </identifier>
<symbol> ( </symbol>
<expressionList>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> moveUp </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> &gt; </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 2 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> moveDown </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> &lt; </symbol>
<term>
<integerConstant> 254 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 2 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> moveLeft </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> &gt; </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 2 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<subroutineDec>
<keyword> method </keyword>
<keyword> void </keyword>
<identifier category='subroutine' usage='definition'> moveRight </identifier>
<symbol> ( </symbol>
<parameterList>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<statements>
<ifStatement>
<keyword> if </keyword>
<symbol> ( </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> &lt; </symbol>
<term>
<integerConstant> 510 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
<symbol> { </symbol>
<statements>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> false </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<letStatement>
<keyword> let </keyword>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 2 </integerConstant>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> setColor </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<keyword> true </keyword>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
<doStatement>
<keyword> do </keyword>
<identifier category='class' usage='call'> Screen </identifier>
<symbol> . </symbol>
<identifier category='subroutine' usage='call'> drawRectangle </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> - </symbol>
<term>
<integerConstant> 1 </integerConstant>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='0'> x </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
<symbol> , </symbol>
<expression>
<term>
<identifier category='FIELD' usage='call' index='1'> y </identifier>
</term>
<symbol> + </symbol>
<term>
<identifier category='FIELD' usage='call' index='2'> size </identifier>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
<symbol> ; </symbol>
</doStatement>
</statements>
<symbol> } </symbol>
</ifStatement>
<returnStatement>
<keyword> return </keyword>
<symbol> ; </symbol>
</returnStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<symbol> } </symbol>
</class>
